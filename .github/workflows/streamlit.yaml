name: Build and Deploy Streamlit app on ec2 instance

on:
  push:
    branches: ["main"]
  
jobs:
  build-linux:
    name: Build linux
    runs-on: ubuntu-latest
    # strategy:
    #   max-parallel: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # this ssh into the ec2 instance and clones into the target directory
      - name: Deploy to Server ec2
        uses: easingthemes/ssh-deploy@main
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            REMOTE_HOST: ${{ secrets.HOST_DNS }}
            REMOTE_USER: ${{ secrets.USERNAME }}
            TARGET: ${{ secrets.TARGET_DIR }}

      # - name: Echo variable
      #   uses: appleboy/ssh-action@master
        # env:
        #   REMOTE_HOST: ${{ secrets.HOST_DNS }}
        #   REMOTE_USER: ${{ secrets.USERNAME }}
        #   TARGET: ${{ secrets.TARGET_DIR }}
        #   OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      #   with:
      #     host: ${{ secrets.HOST_DNS }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       pwd
      #       echo ${{ env.TARGET }}  >> "test.txt"
      #       echo ${{ env.REMOTE_USER }} >> "test.txt"
      #       echo ${{ env.REMOTE_HOST }} >> "test.txt"
      #       echo  ${{ env.OPENAI_API_KEY }} >> "test.txt"

      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo  openaikey=${{ env.OPENAI_API_KEY }} >> "test.txt"
            sudo apt-get -y update
            sudo apt install python3.10-venv 
            python3 -m venv ~/.streamlit
            source ~/.streamlit/bin/activate
            cd /home/ubuntu/EC2-Streamlit-App
            pip install -r requirements.txt
            fuser -k 8501/tcp # kill any PID using the 8501 port
            nohup streamlit run app.py > nohup.out 2> nohup.err < /dev/null &

